{"ref":"96e89231-93f5-49ac-80e7-8b398fc05a35","syncData":{"version":1,"machineId":"61855142-a98e-48ef-921f-a37524596167","content":"{\"css.json\":\"{\\r\\n // Place your snippets for css here. Each snippet is defined under a snippet name and has a prefix, body and \\r\\n // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\r\\n // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\r\\n // same ids are connected.\\r\\n // Example:\\r\\n // \\\"Print to console\\\": {\\r\\n // \\t\\\"prefix\\\": \\\"log\\\",\\r\\n // \\t\\\"body\\\": [\\r\\n // \\t\\t\\\"console.log('$1');\\\",\\r\\n // \\t\\t\\\"$2\\\"\\r\\n // \\t],\\r\\n // \\t\\\"description\\\": \\\"Log output to console\\\"\\r\\n // }\\r\\n \\\"Base css-Background-Margin-Paddding\\\": {\\r\\n  \\\"prefix\\\": \\\"-bmp\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"background: ${1:grey};\\\",\\r\\n   \\\"border: ${2:1px} solid black;\\\",\\r\\n   \\\"margin: ${3:0};\\\",\\r\\n   \\\"padding: ${4:0};\\\",\\r\\n   \\\"box-sizing: border-box;\\\"\\r\\n  ],\\r\\n  \\\"description\\\": \\\"background, border, margin y padding\\\"\\r\\n },\\r\\n \\\"width and height Pixel\\\": {\\r\\n  \\\"prefix\\\": \\\"-whpx\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"width: ${1:200}px;\\\",\\r\\n   \\\"height: ${0:300}px};\\\",\\r\\n  ],\\r\\n  \\\"description\\\": \\\"ancho y alto con pixel \\\"\\r\\n },\\r\\n \\\"width and height %\\\": {\\r\\n  \\\"prefix\\\": \\\"-wh\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"width: ${1:200%};\\\",\\r\\n   \\\"height: ${0:300%};\\\",\\r\\n  ],\\r\\n  \\\"description\\\": \\\"ancho y alto con % o vw/vh\\\"\\r\\n },\\r\\n \\\"Format Font-Family\\\": {\\r\\n  \\\"prefix\\\": \\\"-ffont\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\\",\\r\\n   \\\"font-size: ${1:large};\\\",\\r\\n   \\\"font-style: normal;\\\",\\r\\n   \\\"font-weight: ${2:bold};\\\",\\r\\n   \\\"text-transform: ${3:capitalize};\\\",\\r\\n   \\\"text-align: ${4:center};\\\",\\r\\n  ],\\r\\n  \\\"description\\\": \\\"font-family, size, style, ewight, transform, align\\\"\\r\\n },\\r\\n \\\"Border-Solid-1px\\\": {\\r\\n  \\\"prefix\\\": \\\"-border\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"border${1:-top}: ${2:1}px ${3:solid} ${0:black};\\\",\\r\\n  ],\\r\\n  \\\"description\\\": \\\"BorderTOP\\\"\\r\\n },\\r\\n \\\"url-photo-random\\\": {\\r\\n  \\\"prefix\\\": \\\"-lorempixel\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"url=(\\\\\\\"https://picsum.photos/${1:200}/${2:200}\\\\\\\")\\\"\\r\\n  ],\\r\\n  \\\"description\\\": \\\"Generate url=(Photo) Photo WIDTH / HEIGHT\\\"\\r\\n },\\r\\n \\\"Reset styles\\\": {\\r\\n  \\\"prefix\\\": \\\"-reset\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"* {\\\",\\r\\n   \\\"\\\\tmargin: 0;\\\",\\r\\n   \\\"\\\\tpadding: 0;\\\",\\r\\n   \\\"\\\\tbox-sizing: border-box;\\\",\\r\\n   \\\"\\\\ttext-transform: capitalize;\\\",\\r\\n   \\\"}\\\",\\r\\n   \\\"ul li {\\\",\\r\\n   \\\"\\\\tlist-style: none;\\\",\\r\\n   \\\"}\\\",\\r\\n   \\\"a  {\\\",\\r\\n   \\\"\\\\ttext-decoration: none;\\\",\\r\\n   \\\"\\\\tdisplay: inline-block;\\\",\\r\\n   \\\"\\\\tmargin: 5px;\\\",\\r\\n   \\\"}\\\",\\r\\n  ],\\r\\n  \\\"description\\\": \\\"Reset margin and padding 0 and box-sizing\\\"\\r\\n },\\r\\n \\\"Madia Queris small divices 676px\\\": {\\r\\n  \\\"prefix\\\": \\\"-@mediaS\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"@media (max-width:676px) {${0}}\\\"\\r\\n  ],\\r\\n  \\\"description\\\": \\\"For mobiles 470px or less\\\"\\r\\n },\\r\\n \\\"Madia Queris medium divices 800px\\\": {\\r\\n  \\\"prefix\\\": \\\"-@mediaM\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"@media (max-width:800px) {${0}}\\\"\\r\\n  ],\\r\\n  \\\"description\\\": \\\"Media queris medium divices 800px or less\\\"\\r\\n },\\r\\n \\\"Madia Queris custom NUMpx\\\": {\\r\\n  \\\"prefix\\\": \\\"-@mediaC\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"@media (max-width:${1:800}px) {${0}}\\\"\\r\\n  ],\\r\\n  \\\"description\\\": \\\"Max-width: 800px Medium screem-> 0px to 800px \\\"\\r\\n },\\r\\n \\\"nav row\\\": {\\r\\n  \\\"prefix\\\": \\\"-navrow\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"nav {\\\",\\r\\n   \\\"\\\\tbackground: mediumaquamarine;\\\",\\r\\n   \\\"\\\\topacity: 0.7;\\\",\\r\\n   \\\"\\\\tdisplay: flex;\\\",\\r\\n   \\\"\\\\tjustify-content: center;\\\",\\r\\n   \\\"\\\\tposition: fixed;\\\",\\r\\n   \\\"\\\\ttop: 0;\\\",\\r\\n   \\\"\\\\twidth: 100%;\\\",\\r\\n   \\\"}\\\",\\r\\n  ],\\r\\n  \\\"description\\\": \\\"van en fila \\\"\\r\\n },\\r\\n}\",\"html.json\":\"{\\r\\n    // Place your snippets for html here. Each snippet is defined under a snippet name and has a prefix, body and \\r\\n    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\r\\n    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\r\\n    // same ids are connected.\\r\\n    // Example:\\r\\n    // \\\"Print to console\\\": {\\r\\n    // \\t\\\"prefix\\\": \\\"log\\\",\\r\\n    // \\t\\\"body\\\": [\\r\\n    // \\t\\t\\\"console.log('$1');\\\",\\r\\n    // \\t\\t\\\"$2\\\"\\r\\n    // \\t],\\r\\n    // \\t\\\"description\\\": \\\"Log output to console\\\"\\r\\n    // }\\r\\n    \\\"svg-fast\\\": {\\r\\n        \\\"prefix\\\": \\\"-svg\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"<svg xmlns=\\\\\\\"${1:src}\\\\\\\" viewBox=\\\\\\\"0 0 100 100\\\\\\\">\\\",\\r\\n            \\\"<path d=${2:cordenadas}/>\\\",\\r\\n            \\\"</svg>\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"Etiqueta svg con path[d=]\\\"\\r\\n    },\\r\\n    // More info for random pixel \\r\\n    // https://picsum.photos/\\r\\n    \\\"lorem-pixel\\\": {\\r\\n        \\\"prefix\\\": \\\"-lorempx\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"<img src=\\\\\\\"https://picsum.photos/${1:200}/${2:200}\\\\\\\" alt=\\\\\\\"photo ${1:200}/${2:200}\\\\\\\">\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"Generator Photo WIDTH / HEIGHT\\\"\\r\\n    },\\r\\n    \\\"label and input text\\\": {\\r\\n        \\\"prefix\\\": \\\"-labelin\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"<label for=\\\\\\\"${0:nombre}\\\\\\\">${1:Nombre}</label>\\\",\\r\\n            \\\"<input type=\\\\\\\"text\\\\\\\" id=\\\\\\\"${0:nombre}\\\\\\\">\\\",\\r\\n        ],\\r\\n        \\\"description\\\": \\\"Generator fast label input\\\"\\r\\n    },\\r\\n    \\\"label and textbox\\\": {\\r\\n        \\\"prefix\\\": \\\"-labeltextbox\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"<label for=\\\\\\\"${0:mensaje}\\\\\\\">{1:Mensaje}</label>\\\",\\r\\n            \\\"<textarea name=\\\\\\\"${0:mensaje}\\\\\\\" id=\\\\\\\"${0:mensaje}\\\\\\\"></textarea>\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"Generator fast label and textbox dor comment\\\"\\r\\n    },\\r\\n    \\\"barra de Navegacion\\\": {\\r\\n        \\\"prefix\\\": \\\"-navul\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"<nav>\\\",\\r\\n            \\\"\\\\t<ul>\\\",\\r\\n            \\\"\\\\t<li><a class=\\\\\\\"active\\\\\\\" href=\\\\\\\"#\\\\\\\">Home</a></li>\\\",\\r\\n            \\\"\\\\t<li><a href=\\\\\\\"#\\\\\\\">Home</a></li>\\\",\\r\\n            \\\"\\\\t<li><a href=\\\\\\\"#\\\\\\\">Home</a></li>\\\",\\r\\n            \\\"\\\\t<li><a href=\\\\\\\"#\\\\\\\">Home</a></li>\\\",\\r\\n            \\\"\\\\t<li><a class=\\\\\\\"none\\\\\\\" href=\\\\\\\"#\\\\\\\">Home</a></li>\\\",\\r\\n            \\\"\\\\t</ul>\\\",\\r\\n            \\\"</nav>\\\",\\r\\n        ],\\r\\n        \\\"description\\\": \\\"Generator fast nav -ul -li -a\\\"\\r\\n    },\\r\\n}\",\"markdown.json\":\"{\\r\\n // Place your snippets for markdown here. Each snippet is defined under a snippet name and has a prefix, body and\\r\\n // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\r\\n // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\r\\n // same ids are connected.\\r\\n // Example:\\r\\n // \\\"Print to console\\\": {\\r\\n // \\t\\\"prefix\\\": \\\"log\\\",\\r\\n // \\t\\\"body\\\": [\\r\\n // \\t\\t\\\"console.log('$1');\\\",\\r\\n // \\t\\t\\\"$2\\\"\\r\\n // \\t],\\r\\n // \\t\\\"description\\\": \\\"Log output to console\\\"\\r\\n // }\\r\\n \\\"Etiqueta h\\\": {\\r\\n  \\\"prefix\\\": \\\"-h\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"<${1:h1}>${0:Texto}</${1:h1}>\\\"\\r\\n  ],\\r\\n  \\\"description\\\": \\\"etiquetas hX para titulos\\\"\\r\\n },\\r\\n \\\"Etiqueta lista\\\": {\\r\\n  \\\"prefix\\\": \\\"-ul\\\",\\r\\n  \\\"body\\\": [\\r\\n   \\\"<${1:ul}>\\\",\\r\\n   \\\"\\\\t<${0:li}>\\\",\\r\\n   \\\"\\\\t</${0:li}>\\\",\\r\\n   \\\"</${1:ul}>\\\"\\r\\n  ],\\r\\n  \\\"description\\\": \\\"etiquetas para las lista\\\"\\r\\n }\\r\\n}\",\"python.json\":\"{\\r\\n    // Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and \\r\\n    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\r\\n    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\r\\n    // same ids are connected.\\r\\n    // Example:\\r\\n    // \\\"Print to console\\\": {\\r\\n    // \\t\\\"prefix\\\": \\\"log\\\",\\r\\n    // \\t\\\"body\\\": [\\r\\n    // \\t\\t\\\"console.log('$1');\\\",\\r\\n    // \\t\\t\\\"$2\\\"\\r\\n    // \\t],\\r\\n    // \\t\\\"description\\\": \\\"Log output to console\\\"\\r\\n    // }\\r\\n    // los Caracteres especiales en JSON --->\\\\\\r\\n    \\\"version python3\\\": {\\r\\n        \\\"prefix\\\": \\\"-!3\\\", // con que lo voy a llamar\\r\\n        \\\"body\\\": [\\r\\n            \\\"#!/usr/bin/env python3\\\",\\r\\n            \\\"# -*- coding: utf-8 -*-\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"version python3\\\"\\r\\n    },\\r\\n    \\\"version python\\\": {\\r\\n        \\\"prefix\\\": \\\"-!\\\", // con que lo voy a llamar\\r\\n        \\\"body\\\": [\\r\\n            \\\"#!/usr/bin/env python\\\",\\r\\n            \\\"# -*- coding: utf-8 -*-\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"version python\\\"\\r\\n    },\\r\\n    // docs file\\r\\n    \\\"docs\\\": {\\r\\n        \\\"prefix\\\": \\\"-docs\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\",\\r\\n            \\\"File: ${1:Filename('$1.py', 'foo.py')`}\\\",\\r\\n            \\\"Author: `g:snips_author\\\",\\r\\n            \\\"Email: `g:snips_email\\\",\\r\\n            \\\"Github: `g:snips_github\\\",\\r\\n            \\\"Description: ${0}\\\",\\r\\n            \\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"documentation python\\\"\\r\\n    },\\r\\n    \\\"new funtion\\\": {\\r\\n        \\\"prefix\\\": \\\"-def\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"def ${1:funtion}(${2:arg}):\\\",\\r\\n            \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", // para poner cada \\\" --\\\\\\\", si son 2 \\\"---> \\\\\\\"\\\\\\\"\\r\\n            \\\"\\\\t${3:coment}\\\",\\r\\n            \\\"\\\",\\r\\n            \\\"\\\\tinput :${4}\\\",\\r\\n            \\\"\\\\treturn :${5}\\\",\\r\\n            \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\",\\r\\n            \\\"\\\\t${6:pass}\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"new funtion with arg\\\"\\r\\n    },\\r\\n    \\\"with~\\\": {\\r\\n        \\\"prefix\\\": \\\"-with\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"with ${1:expr} as ${2:var}:\\\",\\r\\n            \\\"\\\\t${0:pass}\\\",\\r\\n        ],\\r\\n        \\\"description\\\": \\\"new funtion with arg\\\"\\r\\n    },\\r\\n    // Clase\\r\\n    \\\"new Class object py2\\\": {\\r\\n        \\\"prefix\\\": \\\"-cl2\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"class ${1:className}(${2:object}):\\\",\\r\\n            \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"${3:docstring for} \\\\\\\"\\\\\\\"\\\\\\\"\\\", // para poner cada \\\" --\\\\\\\", si son 2 \\\"---> \\\\\\\"\\\\\\\"\\r\\n            \\\"\\\\tdef __init__(self,${3:arg}):\\\",\\r\\n            \\\"\\\\t\\\\t${5:pass}\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"new class with init, para heredar de una clase\\\",\\r\\n    },\\r\\n    \\\"new Class init\\\": {\\r\\n        \\\"prefix\\\": \\\"-cla\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"class ${1:className}:\\\",\\r\\n            \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"${3:docstring for} \\\\\\\"\\\\\\\"\\\\\\\"\\\", // para poner cada \\\" --\\\\\\\", si son 2 \\\"---> \\\\\\\"\\\\\\\"\\r\\n            \\\"\\\\tdef __init__(self,${3:arg}):\\\",\\r\\n            \\\"\\\\t\\\\t${5:pass}\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"new class with init\\\",\\r\\n    },\\r\\n    \\\"new Class docs\\\": {\\r\\n        \\\"prefix\\\": \\\"-clai\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"class ${1:className}:\\\",\\r\\n            \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"${2:docstring for} \\\\\\\"\\\\\\\"\\\\\\\"\\\", // para poner cada \\\" --\\\\\\\", si son 2 \\\"---> \\\\\\\"\\\\\\\"\\r\\n            \\\"\\\",\\r\\n            \\\"\\\\tdef __init__(self,${3:arg}):\\\",\\r\\n            \\\"\\\\t\\\\t${5:pass}\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"new class with init and docs\\\",\\r\\n    },\\r\\n    // metodo \\r\\n    \\\"Metodo get_name\\\": {\\r\\n        \\\"prefix\\\": \\\"-clget\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"def get_${1:name}(self):\\\",\\r\\n            \\\"\\\\treturn self.${1:name}\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"Class method get Name \\\"\\r\\n    },\\r\\n    \\\"Metodo set_name\\\": {\\r\\n        \\\"prefix\\\": \\\"-clset\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"def set_${1:name}(self,${2:arg}):\\\",\\r\\n            \\\"\\\\tself.${3:name} = ${2:arg}\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"Class method set Name\\\"\\r\\n    },\\r\\n    \\\"Metodo __str__\\\": {\\r\\n        \\\"prefix\\\": \\\"-clstr\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"def __str__(self) -> str:\\\",\\r\\n            \\\"\\\\treturn f\\\\\\\"${1:Name}: {self.${1:Name}}\\\\\\\"\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"cuando printeas un atributo, salida al usuario\\\"\\r\\n    },\\r\\n    \\\"Metodo __repr__\\\": {\\r\\n        \\\"prefix\\\": \\\"-crepr\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"def __repr__(self) -> str:\\\",\\r\\n            \\\"\\\\t#return  self.__str__()\\\",\\r\\n            \\\"\\\\treturn self.${1:Name}\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"para debugear el codigo y que se muestre de forma legible\\\"\\r\\n    },\\r\\n    // main\\r\\n    \\\"if__main__=='__name__':\\\": {\\r\\n        \\\"prefix\\\": \\\"-if-main\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"if __name__ == '__main__':\\\",\\r\\n            \\\"\\\\t${1:main()}\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"if name==main:---main() es la funcion principal del programa\\\"\\r\\n    },\\r\\n    // Flask microFrameWork\\r\\n    \\\"Init Flask app':\\\": {\\r\\n        \\\"prefix\\\": \\\"-flaskInit\\\",\\r\\n        \\\"body\\\": [\\r\\n            \\\"from flask import Flask\\\",\\r\\n            \\\"app = Flask(__name__)\\\",\\r\\n            \\\"if __name__ == '__main__':\\\",\\r\\n            \\\"\\\\tapp.run(debug=True,${1:port=4000})\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"init Flask\\\"\\r\\n    }\\r\\n}\",\"javascript.json\":\"{\\n\\t// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n\\t\\\"Generate lista\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-lista\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const ${1:lista} = [${0:values}]\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"declarate array\\\"\\n\\t},\\n\\t\\\"Number Random\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-randomN\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"Math.floor(Math.random() * (${1:MAX} - ${0:MIN}) + 1) + ${0:MIN}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Generate random number\\\"\\n\\t},\\n\\t\\\"try and catch\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-try-catch\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"try {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t${1:code}\\\",\\n\\t\\t\\t\\\"} catch (err) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tconsole.log('El error es:', err);\\\",\\n\\t\\t\\t\\\"} finally {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tconsole.log('Ejecución del finally');\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Catch exeptions try and catch\\\"\\n\\t},\\n\\t\\\"Random array function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-randomArray\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"function shuffleArray(array) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn array.sort(() => Math.random() - 0.5);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Change values of Array\\\"\\n\\t},\\n\\t\\\"Ternario ? en varible\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-constTernario\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const ${1:valor} = ${2:condition} ? ${3:true} : ${4:false}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Ternario en un  Cosntante\\\"\\n\\t},\\n\\t\\\"Ternario ?\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-ternario\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"${1:condition} ? ${2:true} : ${3:flase}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Sintax ternario ?\\\"\\n\\t},\\n\\t\\\"Arrow function ()=>{}\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-funcLamda\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"(${1}) => {\\\",\\n\\t\\t\\t\\\"\\\\t${2}\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"arrow funtion\\\"\\n\\t},\\n\\t\\\"Arrow function in constant\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-funclLamda=>\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const ${1:varrible} =  (${2}) => {\\\",\\n\\t\\t\\t\\\"\\\\t${3}\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Sintax arrow funtion in constant\\\"\\n\\t},\\n\\t\\\"Normal function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-func\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"function ${1:name}(${2:args}){\\\",\\n\\t\\t\\t\\\"\\\\t${3}\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Sintax ternario ?\\\"\\n\\t},\\n\\t\\\"Some for OBJ\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-some\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const ${0:var} = ${1:objetos}.some(${2:obj} => ${2}.${3:age === 35});\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Almenos uno los obj cumpla la condicion, return Bool\\\"\\n\\t},\\n\\t\\\"every for OBJ\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-every\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const ${0:var} = ${1:objetos}.every(${2:obj} => ${2}.${3:age === 35});\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Todos los obj cumpla la condicion, return Bool\\\"\\n\\t},\\n\\t\\\"for of\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-forOF\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"for (${1:variable} of ${2:iterable}) {\\\",\\n\\t\\t\\t\\\"${3:code}\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"bucle for para recorrer elementos\\\"\\n\\t},\\n\\t\\\"While\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-while\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"let ${1:valor} = 0;\\\",\\n\\t\\t\\t\\\"\\\\twhile(${1:valor}<4){\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t${2:code}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t${1:valor}++;\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"bucle while1\\\"\\n\\t},\\n\\t\\\"setTimeOut\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-setTimeout\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"setTimeout(${1:funcRefencia}, ${2:milSecgundo}, ${0:params func});\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"ejecutar 1 funcion SOLO 1 VES\\\"\\n\\t},\\n\\t\\\"setInterval\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-setInterval\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"setInterval(${1:funcRefencia}, ${2:milSecgusdo}, ${0:params func});\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"run F continuamente cada x timepo\\\"\\n\\t},\\n}\",\"javascriptreact.json\":\"{\\n\\t// Place your snippets for javascriptreact here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n\\t\\\"Import files\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-import{}\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import {${2:Fucntion}} from '${1:./components}';\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"importacion con {}\\\"\\n\\t},\\n\\t\\\"Import files default\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-importDefault\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import ${2:Fucntion} from '${1:./components}';\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"importacion default\\\"\\n\\t},\\n\\t\\\"Import Lick\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-importLink\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import { Link } from 'react-router-dom';\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"importacion\\\"\\n\\t},\\n\\t\\\"Use Lick\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-importLink\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<Link to=\\\\\\\"${1:/page2}\\\\\\\">Name</Link>\\\\\\\";\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Usar Link to=href\\\"\\n\\t},\\n\\t\\\"Styles components\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-stylesComp\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import styled from 'styled-components';\\\",\\n\\t\\t\\t\\\"export const ${1:Box} = styled.div`\\\",\\n\\t\\t\\t\\\"\\\\t${2}\\\",\\n\\t\\t\\t\\\"`\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Structure Stylescomponets\\\"\\n\\t},\\n\\t\\\"Global Styles\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-global-styles\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import { createGlobalStyle } from \\\\\\\"styled-components\\\\\\\";\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const GlobalStyles = createGlobalStyle`\\\",\\n\\t\\t\\t\\\"  * {\\\",\\n\\t\\t\\t\\\"    border: 1px solid black;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"`;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default GlobalStyles;\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Create global styles using styled-components\\\"\\n\\t},\\n\\t\\\"Styles-components Fucntion\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-styleFunc\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export const ${1:NameStyles} = styled.${2:div}`\\\",\\n\\t\\t\\t\\\"\\\\t${3}\\\",\\n\\t\\t\\t\\\"`\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Structure Stylescomponets funtion\\\"\\n\\t},\\n\\t\\\"Structure Components\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-raface\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import React from 'react'\\\",\\n\\t\\t\\t\\\"const ${1:Popap} = () => {\\\",\\n\\t\\t\\t\\\"return (\\\",\\n\\t\\t\\t\\\" <div>${1:Popap}</div>\\\",\\n\\t\\t\\t\\\")\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"export default ${1:Popap}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"conponent react SAme name as File\\\"\\n\\t},\\n\\t\\\"Router react\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-RoutesInit()\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import { BrowserRouter, Route, Routes} from 'react-router-dom';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const Router = () => (\\\",\\n\\t\\t\\t\\\"\\\\t<BrowserRouter>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<Routes>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<Route index element={${1:<Home/>}} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<Route path=\\\\\\\"${2:/page2/}\\\\\\\" element={${2:<Page2/>}} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</Routes>\\\",\\n\\t\\t\\t\\\"\\\\t</BrowserRouter>\\\",\\n\\t\\t\\t\\\");\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default Router;\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Init for Router you need to install rect router\\\"\\n\\t},\\n\\t\\\"Router react init with return\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-RoutesInit{}\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import { BrowserRouter, Route, Routes} from 'react-router-dom';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const ${1:Router} = () => {\\\",\\n\\t\\t\\t\\\"\\\\treturn (<BrowserRouter>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<Routes>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<Route index element={${1:<Home/>}} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t{*<Route path=\\\\\\\"${2:/page2/}\\\\\\\" element={${2:<Page2/>}}/> *}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</Routes>\\\",\\n\\t\\t\\t\\\"\\\\t</BrowserRouter>);\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default ${1:Router};\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Init for Router you need to install rect router\\\"\\n\\t},\\n\\t\\\"try - catch and finally\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-try-catch-finaly\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"try {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t${1:code}\\\",\\n\\t\\t\\t\\\"} catch (err) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tconsole.log('El error es:', err);\\\",\\n\\t\\t\\t\\\"} finally {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tconsole.log('Ejecución del finally');\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Catch exeptions try and catch\\\"\\n\\t},\\n\\t\\\"try and catch\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-try-catch\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"try {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t${1:code}\\\",\\n\\t\\t\\t\\\"} catch (err) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tconsole.log('El error es:', err);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Catch exeptions try and catch\\\"\\n\\t},\\n\\t\\\"Random array function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-randomArray\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"function shuffleArray(array) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn array.sort(() => Math.random() - 0.5);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Change values of Array\\\"\\n\\t},\\n\\t\\\"Ternario ? en varible\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-constTernario\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const ${1:valor} = ${2:condition} ? ${3:true} : ${4:false}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Ternario en un  Cosntante\\\"\\n\\t},\\n\\t\\\"Arrow function ()=>{}\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-func=>\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"(${1}) => {\\\",\\n\\t\\t\\t\\\"\\\\t${2}\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"arrow funtion\\\"\\n\\t},\\n\\t\\\"Arrow function in constant\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-funclLamda=>\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const ${1:varrible} =  (${2}) => {\\\",\\n\\t\\t\\t\\\"\\\\t${3}\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Sintax arrow funtion in constant\\\"\\n\\t},\\n\\t\\\"Import useParams\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-importuseParams\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import {useParams} from 'react-router-dom';\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"import useParams\\\"\\n\\t},\\n\\t\\\"Params.id\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-paramsID\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const params = useParams()\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"import useParams\\\"\\n\\t},\\n\\t\\\"fetch request\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-fetch\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"fetch(${1:url})\\\",\\n\\t\\t\\t\\\".then((res) => res.json()) // en fetch siempre se debe de pasar a json()\\\",\\n\\t\\t\\t\\\".then((${2:data}) => {\\\",\\n\\t\\t\\t\\\"\\\\tconsole.log(${2:data});\\\",\\n\\t\\t\\t\\\"\\\\tconsole.log(${2:data});\\\",\\n\\t\\t\\t\\\"})\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"fetch API para solicitues\\\"\\n\\t},\\n\\t\\\"axios request\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-axios\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"fetch(${1:url})\\\",\\n\\t\\t\\t\\\".then((res) => res.json()) // en fetch siempre se debe de pasar a json()\\\",\\n\\t\\t\\t\\\".then((${2:data}) => {\\\",\\n\\t\\t\\t\\\"\\\\tconsole.log(${2:data});\\\",\\n\\t\\t\\t\\\"})\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"axiosI para solicitues\\\"\\n\\t},\\n\\t\\\"then and catch\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-then\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"${1:getStar()}.then((${2:data}) => {\\\",\\n\\t\\t\\t\\\"\\\\t${3}\\\",\\n\\t\\t\\t\\\"\\\\tconsole.log(${2:data});\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"}).catch((error) => {\\\",\\n\\t\\t\\t\\\"\\\\tconsole.log(error);\\\",\\n\\t\\t\\t\\\"});\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"import useParams\\\"\\n\\t},\\n\\t\\\"fuction map\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-mapfunc\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"${1:array} &&\\\",\\n\\t\\t\\t\\\"\\\\t${1:array}.map((${2:element}) => {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t${3:code}\\\",\\n\\t\\t\\t\\\");\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"map function\\\"\\n\\t},\\n\\t\\\"fuction ForEach\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-forEachfunc\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"${1:array} &&\\\",\\n\\t\\t\\t\\\"\\\\t${1:array}.forEach((${2:element}) => {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t${3:code}\\\",\\n\\t\\t\\t\\\");\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"forEach function\\\"\\n\\t},\\n\\t\\\"Context API\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-contextComponent\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import { createContext, useState } from \\\\\\\"react\\\\\\\";\\\",\\n\\t\\t\\t\\\"export const DataContext = createContext(); // varibles globales\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export const DataProvider = ({ children }) => {\\\",\\n\\t\\t\\t\\\"// componenentes hijos\\\",\\n\\t\\t\\t\\\"\\\\t${1:const [data, setData] = useState()}\\\",\\n\\t\\t\\t\\\"\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<DataContext.Provider\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t// compartimos valores con value que es un objeto\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tvalue={{${2:variables}}}\\\", // poner Varibles,\\n\\t\\t\\t\\\"\\\\t\\\\t>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t{children}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</DataContext.Provider>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"map function\\\"\\n\\t},\\n\\t\\\"Context Using in other componenents\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-contextUsing\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import { useContext } from \\\\\\\"react\\\\\\\";\\\",\\n\\t\\t\\t\\\"import { DataProvider, DataContext } from \\\\\\\"../context/DataContext\\\\\\\";\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Usar varibles glovales en este componente\\\"\\n\\t},\\n\\t\\\"Using varibles use Context\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-useContext\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const context = useContext(DataContext);\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Acceder a la varibles con context.variable\\\"\\n\\t},\\n\\t\\\"Redirect - useNavigate\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-useNavigate\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import { useNavigate } from \\\\\\\"react-router-dom\\\\\\\";\\\",\\n\\t\\t\\t\\\"const navigate = useNavigate();\\\",\\n\\t\\t\\t\\\"navigate(\\\\\\\"/page\\\\\\\")\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Import and use\\\"\\n\\t},\\n\\t\\\"Some for OBJ\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-some\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const ${0:var} = ${1:objetos}.some(${2:obj} => ${2}.${3:age === 35});\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Almenos uno los obj cumpla la condicion, return Bool\\\"\\n\\t},\\n\\t\\\"every for OBJ\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-every\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const ${0:var} = ${1:objetos}.every(${2:obj} => ${2}.${3:age === 35});\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Todos los obj cumpla la condicion, return Bool\\\"\\n\\t},\\n\\t\\\"for of\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-forOF\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"for (${1:variable} of ${2:iterable}) {\\\",\\n\\t\\t\\t\\\"${3:code}\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"bucle for para recorrer elementos\\\"\\n\\t},\\n\\t\\\"While\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-while\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"let ${1:valor} = 0;\\\",\\n\\t\\t\\t\\\"\\\\twhile(${1:valor}<4){\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t${2:code}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t${1:valor}++;\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"bucle while1\\\"\\n\\t},\\n\\t\\\"setTimeOut\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-setTimeout\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"setTimeout(${1:funcRefencia}, ${2:milSecgundo}, ${0:params func}); \\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"ejecutar 1 funcion SOLO 1 VES\\\"\\n\\t},\\n\\t\\\"setInterval\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-setInterval\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const intervalId = setInterval(${1:funcRefencia}, ${2:milSecgusdo}, ${0:params func}); \\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"run F continuamente cada x timepo\\\"\\n\\t},\\n\\t// REACT NATIVE\\n\\t\\\"Init Staks\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-rnStakInit\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import React from 'react';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Navigation Imports\\\",\\n\\t\\t\\t\\\"import { createNativeStackNavigator } from '@react-navigation/native-stack';\\\",\\n\\t\\t\\t\\\"import { NavigationContainer } from '@react-navigation/native';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// falta importar componete Home\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const Stack = createNativeStackNavigator();\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"function ${1:Staks}() {\\\",\\n\\t\\t\\t\\\"\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<Stack.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<Stack.Screen name=\\\\\\\"Home\\\\\\\" component={Home} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</Stack.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// mismo nombre fichero\\\",\\n\\t\\t\\t\\\"export default function Navigation${1}() {\\\",\\n\\t\\t\\t\\\"    \\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<${1} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"init Stak Navigationn\\\"\\n\\t},\\n\\t\\\"Init Buttom Tab\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-rnBtnTABInit\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import React from 'react';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Navigation Imports\\\",\\n\\t\\t\\t\\\"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\\\",\\n\\t\\t\\t\\\"import { NavigationContainer } from '@react-navigation/native';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// falta importar componete Settings\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const Tab = createBottomTabNavigator();\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"function ${1:ButtomTab}() {\\\",\\n\\t\\t\\t\\\"\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<Tab.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<Tab.Screen name=\\\\\\\"${2:Settings}\\\\\\\" component={${3}} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</Tab.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// mismo nombre fichero\\\",\\n\\t\\t\\t\\\"export default function Navigation${1}() {\\\",\\n\\t\\t\\t\\\"    \\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<${1} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"init Button TAB Navigationn\\\"\\n\\t},\\n\\t\\\"Init Drawer\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-rnDrawerInit\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import React from 'react';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Navigation Imports\\\",\\n\\t\\t\\t\\\"import { createDrawerNavigator } from '@react-navigation/drawer';\\\",\\n\\t\\t\\t\\\"import { NavigationContainer } from '@react-navigation/native';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// falta importar componetes \\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const Drawer = createDrawerNavigator();\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"function ${1:MyDrawer}() {\\\",\\n\\t\\t\\t\\\"\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<Drawer.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<Drawer.Screen name=\\\\\\\"Home\\\\\\\" component={Home} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</Drawer.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"// mismo nombre fichero\\\",\\n\\t\\t\\t\\\"export default function Navigation${1}() {\\\",\\n\\t\\t\\t\\\"    \\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<${1} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"init Drawer Navigationn\\\"\\n\\t},\\n\\t\\\"Init Material Buttom Tab\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-rnMaterialBtnTABInit\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import React from 'react';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Navigation Imports npm install @react-navigation/material-bottom-tabs react-native-paper react-native-vector-icons\\\",\\n\\t\\t\\t\\\"import { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\\\",\\n\\t\\t\\t\\\"import { NavigationContainer } from '@react-navigation/native';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// falta importar componete Settings\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const Tab = createMaterialBottomTabNavigator();\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"function ${1:ButtomTab}() {\\\",\\n\\t\\t\\t\\\"\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<Tab.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<Tab.Screen name=\\\\\\\"${2:Settings}\\\\\\\" component={${3}} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</Tab.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// mismo nombre fichero\\\",\\n\\t\\t\\t\\\"export default function Navigation${1}() {\\\",\\n\\t\\t\\t\\\"    \\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<${1} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"init AMterial Button TAB Navigationn\\\"\\n\\t},\\n\\t\\\"Init Top Tab\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-rnTopTABInit\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import React from 'react';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Navigation Imports npm install @react-navigation/material-top-tabs react-native-tab-view\\\",\\n\\t\\t\\t\\\"// npx expo install react-native-pager-view\\\",\\n\\t\\t\\t\\\"import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';;\\\",\\n\\t\\t\\t\\\"import { NavigationContainer } from '@react-navigation/native';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// falta importar componete Settings\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const Tab = createMaterialTopTabNavigator();\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"function ${1:ButtomTab}() {\\\",\\n\\t\\t\\t\\\"\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<Tab.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<Tab.Screen name=\\\\\\\"${2:Settings}\\\\\\\" component={${3}} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</Tab.Navigator>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// mismo nombre fichero\\\",\\n\\t\\t\\t\\\"export default function Navigation${1}() {\\\",\\n\\t\\t\\t\\\"    \\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<${1} />\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</NavigationContainer>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"init AMterial Button TAB Navigationn\\\"\\n\\t},\\n\\t\\\"Init Styles sheets\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-rnStylesSheets\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import React from 'react';\\\",\\n\\t\\t\\t\\\"import { StyleSheet, Text } from 'react-native';\\\",\\n\\t\\t\\t\\\"// importante importar los componente que se utiliza como View, TExt\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const styles = StyleSheet.create({\\\",\\n\\t\\t\\t\\\"// stylo base text\\\",\\n\\t\\t\\t\\\"\\\\ttext: {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tcolor: 'black',\\\",\\n\\t\\t\\t\\\"\\\\t},\\\",\\n\\t\\t\\t\\\"\\\\tblond: {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfontWeight: 'bold',\\\",\\n\\t\\t\\t\\\"\\\\t},\\\",\\n\\t\\t\\t\\\"});\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default function ${1:StylesText}({ children, blond }) {\\\",\\n\\t\\t\\t\\\"\\\\tconst textStyles = [styles.text, blond && styles.blond];\\\",\\n\\t\\t\\t\\\"\\\\treturn <Text style={textStyles}>{children}</Text>;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"init Styles Sheets en new jsx\\\"\\n\\t},\\n}\",\"django-html.json\":\"{\\n\\t// Place your snippets for django-html here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n\\t\\\"formulario Django\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-Dform\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<form method=\\\\\\\"${1:POST}\\\\\\\">\\\",\\n\\t\\t\\t\\\"\\\\t{% csrf_token %}\\\",\\n\\t\\t\\t\\\"\\\\t{{ form.${2:mi_checkbox} }}\\\",\\n\\t\\t\\t\\\"\\\\t<button type=\\\\\\\"submit\\\\\\\">Enviar</button>\\\",\\n\\t\\t\\t\\\"</form>\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Crea un formulario de checkbox de Django en una plantilla HTML.\\\"\\n\\t},\\n\\t\\\"Bootstrap HTML Template\\\": {\\n\\t\\t\\\"prefix\\\": \\\"-D!base\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"{% load static %}\\\",\\n\\t\\t\\t\\\"<!doctype html>\\\",\\n\\t\\t\\t\\\"<html lang=\\\\\\\"en\\\\\\\">\\\",\\n\\t\\t\\t\\\"  <head>\\\",\\n\\t\\t\\t\\\"    <meta charset=\\\\\\\"utf-8\\\\\\\">\\\",\\n\\t\\t\\t\\\"    <meta name=\\\\\\\"viewport\\\\\\\" content=\\\\\\\"width=device-width, initial-scale=1\\\\\\\">\\\",\\n\\t\\t\\t\\\"    <title> {% block title %}Bootstrap demo{% endblock title %} </title>\\\",\\n\\t\\t\\t\\\"    {% comment %} <link rel=\\\\\\\"stylesheet\\\\\\\" href=\\\\\\\"{% static 'css/style.css' %}\\\\\\\"> {% endcomment %}\\\",\\n\\t\\t\\t\\\"    <link href=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\\\\\\\" rel=\\\\\\\"stylesheet\\\\\\\" integrity=\\\\\\\"sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9\\\\\\\" crossorigin=\\\\\\\"anonymous\\\\\\\">\\\",\\n\\t\\t\\t\\\"  </head>\\\",\\n\\t\\t\\t\\\"  <body>\\\",\\n\\t\\t\\t\\\"    {% block content %}<h1>Hello, world!</h1>{% endblock content %}\\\",\\n\\t\\t\\t\\\"    <script src=\\\\\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\\\\\\\" integrity=\\\\\\\"sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm\\\\\\\" crossorigin=\\\\\\\"anonymous\\\\\\\"></script>\\\",\\n\\t\\t\\t\\\"    {% comment %} <script src=\\\\\\\"{% static 'script/script.js' %}\\\\\\\"></script> {% endcomment %}\\\",\\n\\t\\t\\t\\\"  </body>\\\",\\n\\t\\t\\t\\\"</html>\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Bootstrap HTML template\\\"\\n\\t}\\n}\",\"xml.json\":\"{\\n\\t// Place your snippets for xml here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n\\t\\\"Crear permiso de acceso\\\": {\\n\\t\\t\\\"prefix\\\": \\\"accesoPremisos\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\",\\n\\t\\t\\t\\\"<odoo>\\\",\\n\\t\\t\\t\\\"    <!-- Permiso de Acceso, Para Administracion /ajustes -->\\\",\\n\\t\\t\\t\\\"    <record id=\\\\\\\"model_acces_${1:modelClass}\\\\\\\" model=\\\\\\\"ir.model.access\\\\\\\">\\\",\\n\\t\\t\\t\\\"        <field name=\\\\\\\"name\\\\\\\">model.access.${1:modelClass}</field>\\\",\\n\\t\\t\\t\\\"        <field name=\\\\\\\"model_id\\\\\\\" ref=\\\\\\\"${2:name_modul}.model_${3:model_name}\\\\\\\" />\\\",\\n\\t\\t\\t\\\"        <field name=\\\\\\\"group_id\\\\\\\" ref=\\\\\\\"{4:group_acces(viewdocs)}\\\\\\\" />\\\",\\n\\t\\t\\t\\\"        <field name=\\\\\\\"perm_read\\\\\\\" eval=\\\\\\\"1\\\\\\\" />\\\",\\n\\t\\t\\t\\\"        <field name=\\\\\\\"perm_write\\\\\\\" eval=\\\\\\\"1\\\\\\\" />\\\",\\n\\t\\t\\t\\\"        <field name=\\\\\\\"perm_create\\\\\\\" eval=\\\\\\\"1\\\\\\\" />\\\",\\n\\t\\t\\t\\\"        <field name=\\\\\\\"perm_unlink\\\\\\\" eval=\\\\\\\"1\\\\\\\" />\\\",\\n\\t\\t\\t\\\"    </record>\\\",\\n\\t\\t\\t\\\"</odoo>\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Crear un permiso de acceso en Odoo\\\"\\n\\t}\\n}\"}"}}